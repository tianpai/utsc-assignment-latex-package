
% MIT License
%
% Copyright (c) 2023 Tianpai Zhang
%
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in all
% copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.


\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{cscc63}[2023/06/11 Turing Machines]

\RequirePackage{amsmath, amssymb, enumitem, amsthm, mathtools}
\RequirePackage{algpseudocode, algorithm}


%%%%%%%%%%%%%%%%%%%% commands 
\newcommand{\encode}[1]{\left < #1 \right > }
\newcommand{\llang}[0]{\mathcal L}
\newcommand{\lang}[1]{\mathcal L (#1)}

\newcommand{\overf}[2]{\encode{#1} \overset{f}\longmapsto \encode{#2} }
\newcommand{\mapredu}[2]{ #1 \leq_m #2}
%%%%%%%%%%%%%%%%%%%% Terms

\def\NPC{NP-\textsc{complete}}
\def\NbyN{n \times n}
\def\binary{\{0,1\}}
%%%%%%%%%%%%%%%%%%%% Turing Machiens

\def\universialTM{
    A_{TM} = \{\encode{M,x}| M \text{ accepts } x \}
}

\def\halt{
   H = \{ \encode{M,x}|\text{TM $M$ halts on input } x \} 
}

\def\haltBar{
    \overline{H} = \{ \encode{M,x}|\text{TM $M$ does not halt on input } x \} 
}

\def\E{
    E = \{\encode{M}|\lang{M} = \varnothing \}
}

\def\regular{
   REG = \{\encode{M}|\lang{M} \text{ is regular} \} 
}


\def\het{
    HET = \{ \encode{M}|M \text{ halts on empty tape} \} 
}

\def\ALLtm{
    ALL_{TM} = \{\encode{M}|M\text{ accepts all inputs} \} 
}



